services:
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - init_sql:/docker-entrypoint-initdb.d
    networks:
      - kafka-network
  zookeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeper
    ports: 
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network
  ui:
    ports:
      - "8080:8080"
    image: provectuslabs/kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - kafka-network
        #schema-registry:
        #image: confluentinc/cp-schema-registry
        #depends_on:
        # - zookeper
        #- kafka
        #ports:
        #- "8081:8081"
        #environment:
        #SCHEMA_REGISTRY_HOST_NAME: schema-registry
        #SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
        #SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        #networks:
        #- kafka-network
networks:
  kafka-network:
    driver: bridge
    driver_opts:
      con.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
